name: CI

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: 'postgresql://nlnl:nlnl@localhost:25432/nlnl'

    strategy:
      matrix:
        node-version: [20.x]

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: nlnl
          POSTGRES_PASSWORD: nlnl
          POSTGRES_DB: nlnl
        ports:
          - 25432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: sudo apt-get update -qq && sudo apt-get install -y openssl libssl-dev jq curl
      - run: yarn
      - run: yarn prisma db push --force-reset && yarn prisma db seed && yarn prisma generate
      - run: yarn build
      - run: yarn ci
      - name: Extract branch name
        id: extract_branch
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        shell: bash
      - name: Send result to Line Bot
        run: ./test/result_sender.sh
        env:
          USER_ID: ${{ secrets.USER_ID }}
          BAREAR_AUTH: ${{ secrets.BAREAR_AUTH }}
          COMMIT_SHA: ${{ github.sha }}
          BRANCH_NAME: ${{ github.ref_name }}
          AUTHOR_NAME: ${{ github.actor }}
          REPOSITORY_NAME: ${{ github.repository }}
          RUN_ID: ${{ github.run_id }}
          RUN_NUMBER: ${{ github.run_number }}
          WORKFLOW_NAME: ${{ github.workflow }}
          EVENT_NAME: ${{ github.event_name }}
